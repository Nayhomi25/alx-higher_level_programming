============================
How to use 0-add_integer.py
============================

This module defines a function to add integers `add_integer(a, b=98)`.

Usage
======

``add_integer()`` returns the addition of its two arguments. For numbers,
the value is equivalent to using the ``+`` operator.

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 4)
	6

::

	>>> add_integer(2, -4)
	-2

it also works with floating point values

::

	>>> add_integer(2.0, 4.0)
	6

Floats must be casted to ints befor addition

::

	>>> add_integer(2.5, 3.5)
	5

::

	>>> add_integer(-2.5, -3.5)
	-5

Can also be used with both Non-floating points and Floating points

::

	>>> add_integer(2.5, 4.0)
	6

Second argument is optional - default value 98

::

	>>> add_integer(2)
	100

Non Numbers
===========

`add_integer()` requires both arguments be  either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

	>>> add_integer('Hi', 4)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2, 'Hi')
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer(None)
	Traceback (most recent call last):
	TypeError: a must be an integer

::

	>>> add_integer(2, None)
	Traceback (most recent call last):
	TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

	>>> add_integer('Hi', 'Friends')
	Traceback (most recent call last):
	TypeError: a must be an integer

Function cannot compute infinity

::

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

::
	>>> add_integer(2, float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

Function cannot work with NaN numbers

::

	>>> add_integer(float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

::

	>>> add_integer(2, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer
